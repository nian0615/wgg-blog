(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{379:function(e,t,s){"use strict";s.r(t);var n=s(43),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"《vue-js快跑》"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#《vue-js快跑》"}},[e._v("#")]),e._v(" 《Vue.js快跑》")]),e._v(" "),s("p",[s("img",{attrs:{src:"http://qiniu.hackslog.cn/1535114374-1_w_1.jpg",alt:""}})]),e._v(" "),s("p",[e._v("这本书介绍的Vue核心知识，其实我已经对Vue有比较充分的了解了（只差阅读源码），算是巩固一下基础。")]),e._v(" "),s("p",[e._v("书的工程创建还只是vue-cli2.x，现在有更好用的3.x了，等Vue3.0出来可能这本书不太适合了。")]),e._v(" "),s("p",[e._v("有些知识已经内化了的我就不记录了，那些了解不多或者觉得重要的我会扩展一下。")]),e._v(" "),s("p",[s("img",{attrs:{src:"http://qiniu.hackslog.cn/Snipaste_2019-10-03_15-25-25.png",alt:"vue.js running"}})]),e._v(" "),s("h2",{attrs:{id:"_1-基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础"}},[e._v("#")]),e._v(" 1.基础")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://aotu.io/notes/2017/04/10/fetch-API/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("fetch的用法"),s("OutboundLink")],1)]),e._v(" "),s("ul",[s("li",[e._v("v-if值为假不会插入DOM，v-show都会插入DOM中，因此如果希望频繁地切换某些内容，那么v-show会是更好的选择。")]),e._v(" "),s("li",[e._v("v-for参数顺序是(value, key),我一般写成(item, index)")]),e._v(" "),s("li",[s("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#v-bind",target:"_blank",rel:"noopener noreferrer"}},[e._v("v-bind"),s("OutboundLink")],1),e._v(" 修饰符包括.prop, .camel, .sync  prop的情况比如可以绑定disabled实现v-if的情况")]),e._v(" "),s("li",[e._v("官方文档中"),s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/reactivity.html#ad",target:"_blank",rel:"noopener noreferrer"}},[e._v("深入响应式原理"),s("OutboundLink")],1),e._v(" 这一节非常重要，概括的情况：\n"),s("ul",[s("li",[e._v("给定对象添加新的属性不会有变化侦测，可以用Object.assign覆盖对象，或者this.$set设置新属性")]),e._v(" "),s("li",[e._v("数组用index设置元素也是不能响应式的，要用splice或者Vue.set()")])])]),e._v(" "),s("li",[s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/forms.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("v-model"),s("OutboundLink")],1),e._v("双向绑定，针对表单元素value、checked、selected这些情况")]),e._v(" "),s("li",[e._v("v-html要防止跨站脚本攻击")]),e._v(" "),s("li",[e._v("计算属性会被缓存：如果在模板中多次调用一个方法，方法中的代码在每一次调用时都会执行一遍；但如果计算属性被多次调用，其中的代码只会执行一次，之后的每次调用都会使用被缓存的值。计算属性还可以设置setter和getter")]),e._v(" "),s("li",[e._v("侦听器很适合用于处理异步操作\n"),s("ul",[s("li",[e._v("侦听对象里的值，可以使用 . 操作符")]),e._v(" "),s("li",[e._v("当监听的属性发生变化时，侦听器会被传入两个参数：所监听 属性的当前值和原来的旧值（val，oldVal)")]),e._v(" "),s("li",[e._v("侦听整个对象的变化，需要把deep选项设置为true")])])]),e._v(" "),s("li",[e._v("filters，这个确实用得不够多，很多情况我是直接在请求数据之后用三元表达式把数据内容转换了一下\n"),s("ul",[s("li",[s("strong",[e._v("过滤器是组件中唯一不能使用this来访问数据或者方法的地方")]),e._v("，因为过滤器应该是纯函数，会React应该更能理解这个原理")]),e._v(" "),s("li",[e._v("如果想在过滤器中访问其他数据，可以将它作为参数传入")]),e._v(" "),s("li",[e._v("只可以在插值和v-bind指令中使用过滤器，其实在v-bind表达式中建议使用方法或者计算属性")])])]),e._v(" "),s("li",[e._v("关于ref，我经常是通过this.$refs来调用子组件的方法，如果用的是第三方组件，通过阅读源码可以调用它们不曾暴露出来的方法挺管用")]),e._v(" "),s("li",[e._v("生命周期\n"),s("ul",[s("li",[e._v("在Vue2.0中，mounted钩子触发时并不保证元素已经被添加到DOM上。如果想保证元素已经被添加，可以调用Vue.nextTick()方法（也可以通过this.$nextTick()调用）并传入一个回调函数，在回调函数中添加需要在元素被添加DOM之后运行的代码。")]),e._v(" "),s("li",[e._v("生命周期钩子在业务开发的时候用before那些还是比较少的，记住created、mounted、updated、destroyed即可。")])])]),e._v(" "),s("li",[e._v("Vue.directive()注册全局指令。一共有5个钩子函数，分别是bind、inserted、update、componentUpdated和unbind。最常用的是bind和update钩子\n"),s("ul",[s("li",[e._v("bind钩子函数会在指令绑定到元素时被调用。")]),e._v(" "),s("li",[e._v("inserted钩子会在绑定的元素被添加到父节点时被调用，跟mounted一样")]),e._v(" "),s("li",[e._v("update钩子会在绑定该指令的组件节点被更新时调用，但是该组价你的子组件可能此时还未更新")]),e._v(" "),s("li",[e._v("componentUpdated钩子和 updated钩子类似，但它会在组件的子组件都更新完成后调用")]),e._v(" "),s("li",[e._v("unbind钩子用于指令的拆除，当指令从元素上解绑时会被调用")]),e._v(" "),s("li",[s("strong",[e._v("参数：name、value、oldValue、expression、arg、modifiers")])])])]),e._v(" "),s("li",[e._v("过渡\n"),s("ul",[s("li",[e._v("{name}-enter 设置那些需要在元素开始进入过渡时被移除的CSS属性")]),e._v(" "),s("li",[e._v("{name}-enter-active 设置过渡的时间、长度、过渡的属性和使用的曲线函数")]),e._v(" "),s("li",[e._v("{name}-enter-to设置那些在元素开始进入过渡时添加的CSS属性，可以设置-enter相反的属性效果好一些")]),e._v(" "),s("li",[e._v("{name}-leave 跟-enter-to一样不太有用，设置-leave-to相反的动画就行")]),e._v(" "),s("li",[e._v("{name}-leave-active应用于离开过渡的整个阶段")]),e._v(" "),s("li",[e._v("{name}-leave-to 在离开过渡被触发之后下一帧生效，在过渡完成之后才被移除。")]),e._v(" "),s("li",[e._v("最实用的四个类名：\n"),s("ul",[s("li",[e._v("{name}-enter:"),s("strong",[e._v("设置在进入过渡阶段需要过渡的CSS属性")])]),e._v(" "),s("li",[e._v("{name}-enter-active："),s("strong",[e._v("设置进入过渡的transition CSS属性")])]),e._v(" "),s("li",[e._v("{name}-leave-acitve："),s("strong",[e._v("设置离开过渡的transition CSS属性")])]),e._v(" "),s("li",[e._v("{name}-leave-to： "),s("strong",[e._v("设置在离开过渡阶段需要过渡的CSS属性")])])])])])]),e._v(" "),s("li",[e._v("动画，类似Velocity\n"),s("ul",[s("li",[e._v("用法是在transition里v-on绑定特定的钩子函数")]),e._v(" "),s("li",[e._v("钩子\n"),s("ul",[s("li",[e._v("beforeEnter")]),e._v(" "),s("li",[e._v("enter")]),e._v(" "),s("li",[e._v("afterEnter")]),e._v(" "),s("li",[e._v("enterCancelled")]),e._v(" "),s("li",[e._v("beforeLeave")]),e._v(" "),s("li",[e._v("leave")]),e._v(" "),s("li",[e._v("afterLeave")])])])])])]),e._v(" "),s("h2",{attrs:{id:"_2-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-组件"}},[e._v("#")]),e._v(" 2.组件")]),e._v(" "),s("p",[e._v("Vue实例中的data属性是一个对象，然而组件中的data属性是一个函数。这是因为一个组件可以在同一个页面上被多次引用，你大概不希望它们共享一个data对象。vue-cli3创建出来的都是使用函数来写的，就相当于立即执行函数的做法，确定一个作用域。")]),e._v(" "),s("p",[e._v("props的属性可以通过this来访问，可以指定prop的类型，相当于React用了proptype.")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("props: {\n    price: {\n        type: Number,\n        required: true,\n        default: 100,\n        validator(value) {\n            return value >=0;\n        }\n    },\n},\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("props的属性和组件名在父组件里写都是驼峰转横杠的。")]),e._v(" "),s("p",[e._v("数据流和.sync修饰符：如果需要数据双向绑定，可以使用.sync修饰符，比如分页组件当前所在页数；在input中的话可以使用update")]),e._v(" "),s("ul",[s("li",[e._v("自定义方法，this.#emit('方法名', 参数)，此外还有$off移除函数")]),e._v(" "),s("li",[e._v("插槽\n"),s("ul",[s("li",[e._v("<slot></solt>")]),e._v(" "),s("li",[e._v('具名插槽<slot name=""></slot>')]),e._v(" "),s("li",[e._v("作用域插槽，里面的户型可以用slot-scope属性中定义的变量来获取")])])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<blog-listing>\n\t<img\n\t\tslot="summary"\n\t\tslot-scope="{ image, summary }"\n\t\t:src="image"\n\t\t:alt="summary">\n</blog-listing>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("ul",[s("li",[e._v("混入mixins的使用，可以减少组件中重复的属性、方法、计算属性等的使用。我试过一个后台管理重复了60次相同内容的不同组件，用了mixins，实在太方便了。mixins:[userMixin]  不过要小心方法、计算属性、非生命周期钩子属性的重复，因为组件的会覆盖混入的内容，可以使用私有方法或属性的方式，如$开头，或者_开头")]),e._v(" "),s("li",[e._v("大部分属性会覆盖组件内部模板中同名属性，但是class和style里面的会被合并，不过如果CSS内部的相同则会被覆盖")])]),e._v(" "),s("h2",{attrs:{id:"_3-添加样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加样式"}},[e._v("#")]),e._v(" 3.添加样式")]),e._v(" "),s("p",[e._v("class绑定为数组，每一项即为函数名，当然也可以用方法返回函数名")]),e._v(" "),s("p",[e._v("绑定为对象的时候key就是函数名，但是可以根据value的true或显示来决定显示与否")]),e._v(" "),s("p",[e._v("style用v-bind绑定对象时，CSS属性驼峰式")]),e._v(" "),s("h2",{attrs:{id:"_4-render函数和jsx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-render函数和jsx"}},[e._v("#")]),e._v(" 4.render函数和JSX")]),e._v(" "),s("ul",[s("li",[e._v("createElement参数\n"),s("ul",[s("li",[e._v("组件名")]),e._v(" "),s("li",[e._v("组件属性\n"),s("ul",[s("li",[e._v("attrs，比如type")]),e._v(" "),s("li",[e._v("props")]),e._v(" "),s("li",[e._v("domProps, 比如innnerHTML")]),e._v(" "),s("li",[e._v("on")]),e._v(" "),s("li",[e._v("slot")]),e._v(" "),s("li",[e._v("key")]),e._v(" "),s("li",[e._v("ref")]),e._v(" "),s("li",[e._v("class")]),e._v(" "),s("li",[e._v("style")])])]),e._v(" "),s("li",[e._v("组件内容")])])])]),e._v(" "),s("p",[e._v("因为class和style可以设置为数组和对象，所以需要把他们从attrs剥离出attrs属性")]),e._v(" "),s("p",[e._v("Vue中使用"),s("a",{attrs:{href:"https://www.npmjs.com/package/babel-plugin-transform-vue-jsx",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSX: babel-plugin-transform-vue-jsx"),s("OutboundLink")],1),e._v(" ,我滴天，居然这么多人用React的方式写Vue...")]),e._v(" "),s("h2",{attrs:{id:"_5-vue-router"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vue-router"}},[e._v("#")]),e._v(" 5.vue-router")]),e._v(" "),s("p",[e._v("<router-view />")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://router.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-router官方文档"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("动态路由的实现其实用到的库时"),s("a",{attrs:{href:"https://github.com/pillarjs/path-to-regexp",target:"_blank",rel:"noopener noreferrer"}},[e._v("path-to-regexp"),s("OutboundLink")],1),e._v(" ，Express、Koa和react-router都有用到，400行不到的正则匹配轮子。")]),e._v(" "),s("p",[e._v("获取动态路由参数，this.$route.params")]),e._v(" "),s("p",[e._v("由/user/123调到/user/456的时候，因为组件被重用了，生命周期钩子mounted不会被触发，这时需要用到路由的生命周期钩子：beforeRouteUpdate，注意参数传入的to、from、next。")]),e._v(" "),s("p",[e._v("另外的一种方式是使用watch来监听：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const PageUser = {\n    template: '<div> ... user ... </div>',\n    watch: {\n        '$route'() {\n            console.log('Route updated');\n        }\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("如果让组件的属性由动态路由中传入，可以在定义路由的时候设置props为true。不过通常用$route.params获取就行了，定义跟路由相关的数组可能把情况搞得复杂。")]),e._v(" "),s("p",[e._v("重定向：redirect属性， alias也可以实现重定向")]),e._v(" "),s("p",[e._v("<router-link>的好处是它不用重新加载页面")]),e._v(" "),s("ul",[s("li",[e._v('默认的tag属性是a，也可以写tag="li" , tag="div"之类的、')]),e._v(" "),s("li",[e._v("默认渲染的类名是router-link-active，可以通过active-class来指定")]),e._v(" "),s("li",[e._v("原生事件的点击需要用到@click.native")])]),e._v(" "),s("p",[s("strong",[e._v("编程式导航：")])]),e._v(" "),s("ul",[s("li",[e._v("router.push()")]),e._v(" "),s("li",[e._v("router.replace()")]),e._v(" "),s("li",[e._v("router.go()")])]),e._v(" "),s("p",[s("strong",[e._v("导航守卫")])]),e._v(" "),s("ul",[s("li",[e._v("router.beforeEach()\n"),s("ul",[s("li",[e._v("参数to、from、next")]),e._v(" "),s("li",[e._v("可以判断路径开头，比如to.path.startsWith('/account')")]),e._v(" "),s("li",[e._v("路由元信息meta协助判断权限  meta: { requiresAuth: true} ,这里的信息内容是你自己指定的")])])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("router.beforeEach((to, from, next) => {\n    const requiresAuth = to.matched.some((record) => {\n    \treturn record.meta.requiredsAuth;\n    })\n    if (requiresAuth && !userAuthenticated()) {\n        next('/login');\n    } else {\n        next();\n    }\n});\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("ul",[s("li",[e._v("router.afterEach 可以用来设置标题，比如")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("router.afterEach((to) => {\n    document.title = to.meta.title;\n})\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[s("strong",[e._v("路由独享守卫")])]),e._v(" "),s("ul",[s("li",[e._v("beforeRouteEnter")]),e._v(" "),s("li",[e._v("beforeRouteUpdate")]),e._v(" "),s("li",[e._v("beforeRouteLeave")])]),e._v(" "),s("p",[e._v("注意：在beforeRouteEnter中this是undefined，因此此时组件还尚未被创建。但是可以在next里传一个回调，该回调会被传入组件实例作为其第一个参数：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const PageAccount = {\n    template: '<div>...account page...</div>'\n    beforeRouteEnter(to, from, next) {\n        next((vm) => {\n            console.log(vm.$route);\n        })\n    }\n};\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("404页面,放在最后")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const router = new VueRoute({\n    routes: [\n        {\n            path: '*',\n            component: PageNotFound\n        }\n    ]\n});\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br")])]),s("p",[e._v("子路由里可能也有无法匹配的，在子路由数组的最后一个也放一个PageNotFound.")]),e._v(" "),s("p",[e._v("路由命名可以为写router-link和router.push节省代码量。")]),e._v(" "),s("h2",{attrs:{id:"_6-vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vuex"}},[e._v("#")]),e._v(" 6.vuex")]),e._v(" "),s("p",[e._v("提供一种集中式存储，可以在整个应用中使用它来存储和维护全局状态。")]),e._v(" "),s("p",[e._v("异步的操作，dispatch到actions，辅助函数mapActions")]),e._v(" "),s("p",[e._v("mapState返回一个被用作计算属性的函数对象，比如直接通过return state属性的那种操作适合放在计算属性中。如果返回的是跟store中不同名称，适合用对象的写法，如果是相同的可以使用数组的方式。另外还有解构的方式对对象展开。")]),e._v(" "),s("p",[e._v("getter：为了多个组件重用一些计算属性的操作，可以使用getters属性，通过this.$store.getters获取，而getters里面可以调用已经定义的小getter。辅助函数：mapGetters，放到组件的computed里面。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("computed: mapGetters(['unread', 'unreadFrom'])\n// 等效于\ncomputed: {\n    unread() {\n        return this.$store.getters.unread;\n    },\n    unreadFrom() {\n        return this.$store.getters.unreadFrom;\n    }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("对数据进行修改:commit 到actions，辅助函数mapMutations。")]),e._v(" "),s("p",[e._v("如果使用module来管理store，那么访问state的时候需要指定哪个state，使用辅助函数的时候也要指定module。")]),e._v(" "),s("p",[e._v("对于辅助函数，在设置模块的时候指定一下命名空间，比如：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export const namespaced = true;\n\n// 则\ncomputed：{\n    unreadFrom() {\n        return this.$store.getterrs['messages/unreadFrom'];\n    }\n}\n// dispatch和commit的操作类似\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("h2",{attrs:{id:"_7-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-测试"}},[e._v("#")]),e._v(" 7.测试")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://vue-test-utils.vuejs.org/zh/guides/#%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-test-utils"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);